# This file was auto-generated by Fern from our API Definition.

import datetime as dt
import typing

import typing_extensions

from ..core.datetime_utils import serialize_datetime
from .create_chat_completion_response_choices_choices_item_message_content import (
    CreateChatCompletionResponseChoicesChoicesItemMessageContent,
)
from .create_chat_completion_response_choices_choices_item_message_function_call import (
    CreateChatCompletionResponseChoicesChoicesItemMessageFunctionCall,
)
from .create_chat_completion_response_choices_choices_item_message_tool_calls_item import (
    CreateChatCompletionResponseChoicesChoicesItemMessageToolCallsItem,
)

try:
    import pydantic.v1 as pydantic  # type: ignore
except ImportError:
    import pydantic  # type: ignore


class CreateChatCompletionResponseChoicesChoicesItemMessage(pydantic.BaseModel):
    role: typing_extensions.Literal["assistant"]
    content: typing.Optional[CreateChatCompletionResponseChoicesChoicesItemMessageContent]
    function_call: typing.Optional[CreateChatCompletionResponseChoicesChoicesItemMessageFunctionCall]
    tool_calls: typing.Optional[typing.List[CreateChatCompletionResponseChoicesChoicesItemMessageToolCallsItem]]

    def json(self, **kwargs: typing.Any) -> str:
        kwargs_with_defaults: typing.Any = {"by_alias": True, "exclude_unset": True, **kwargs}
        return super().json(**kwargs_with_defaults)

    def dict(self, **kwargs: typing.Any) -> typing.Dict[str, typing.Any]:
        kwargs_with_defaults: typing.Any = {"by_alias": True, "exclude_unset": True, **kwargs}
        return super().dict(**kwargs_with_defaults)

    class Config:
        frozen = True
        smart_union = True
        json_encoders = {dt.datetime: serialize_datetime}
