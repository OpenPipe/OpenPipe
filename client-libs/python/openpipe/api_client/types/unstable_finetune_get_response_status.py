# This file was auto-generated by Fern from our API Definition.

import enum
import typing

T_Result = typing.TypeVar("T_Result")


class UnstableFinetuneGetResponseStatus(str, enum.Enum):
    PENDING = "PENDING"
    STARTED = "STARTED"
    TRANSFERRING_TRAINING_DATA = "TRANSFERRING_TRAINING_DATA"
    TRAINING = "TRAINING"
    DEPLOYED = "DEPLOYED"
    ERROR = "ERROR"

    def visit(
        self,
        pending: typing.Callable[[], T_Result],
        started: typing.Callable[[], T_Result],
        transferring_training_data: typing.Callable[[], T_Result],
        training: typing.Callable[[], T_Result],
        deployed: typing.Callable[[], T_Result],
        error: typing.Callable[[], T_Result],
    ) -> T_Result:
        if self is UnstableFinetuneGetResponseStatus.PENDING:
            return pending()
        if self is UnstableFinetuneGetResponseStatus.STARTED:
            return started()
        if self is UnstableFinetuneGetResponseStatus.TRANSFERRING_TRAINING_DATA:
            return transferring_training_data()
        if self is UnstableFinetuneGetResponseStatus.TRAINING:
            return training()
        if self is UnstableFinetuneGetResponseStatus.DEPLOYED:
            return deployed()
        if self is UnstableFinetuneGetResponseStatus.ERROR:
            return error()
